buildscript {
    ext.kotlin_version = '1.1.51'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
    }
}

plugins {
    id 'org.springframework.boot' version '1.5.9.RELEASE'
}

group 'm3ns1'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.palantir.docker'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
    compile("org.springframework.boot:spring-boot-starter-web")

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// docker configuration
docker {
    dependsOn build
    // set the name of the image
    name "${project.group}/${jar.baseName}"
    // add the archive path to the docker path
    files jar.archivePath
    // the JAR_FILE argument
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

def selectedProfile = project.property("profile")

if (selectedProfile == 'dev') {
    println "####################################################"
    println "################## DEVELOPMENT #####################"
    println "####################################################"
} else {
    println "####################################################"
    println "################## PRODUKTION ######################"
    println "####################################################"
}
